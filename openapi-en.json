{"openapi": "3.0.0", "servers": [{"url": "https://open.canada.ca/data/api", "description": "Production Portal [PUBLIC]"}, {"url": "https://registry.open.canada.ca/api", "description": "Production Registry [RESTRICTED]"}, {"url": "https://staging.open.canada.ca/data/api", "description": "Staging Portal [RESTRICTED]"}, {"url": "https://registry-staging.open.canada.ca/api", "description": "Staging Registry [RESTRICTED]"}, {"url": "https://test.open.canada.ca/data/api", "description": "Test Portal [RESTRICTED]"}, {"url": "https://registry-test.open.canada.ca/api", "description": "Test Registry [RESTRICTED]"}], "info": {"title": "Open Government CKAN API", "description": "This API provides live access to the CKAN portion of the Open Government Portal and Registry systems.\n\n- Portal: https://open.canada.ca\n  - our public data portal\n  - includes data federated from provinces and municipalities\n  - read-only API calls can be made without an API key\n  - authorization required only for publishing federated data\n\n- Registry: https://registry.open.canada.ca\n  - accessible within the Government of Canada (GoC) network\n  - for collecting and publishing data from GoC departments\n  - new datasets must be manually reviewed and approved by the Open Government team\n  - publishes approved datasets to the Production Portal automatically\n  - user account or API key required for all operations\n\nOur Staging sites are for sharing upcoming features and testing integration, and Test sites\nare for features in development.\n", "termsOfService": "https://open.canada.ca/en/open-government-licence-canada", "contact": {"name": "TBS Open Government", "url": "https://open.canada.ca/", "email": "open-ouvert@tbs-sct.gc.ca"}, "license": {"name": "Open Government License - Canada", "url": "https://open.canada.ca/en/open-government-licence-canada"}, "version": "0.1"}, "tags": [{"name": "action", "description": "CKAN's Action API is a powerful, RPC-style API that exposes all of\nCKAN's core features to API clients.\n\n- All endpoints support POST requests with an `application/json` or a\n  `multipart/form-data` body\n- Use an `application/json` POST request when nested json parameters\n  are required\n- Use a `multipart/form-data` POST request when file uploads are required\n- Read-only endpoints (`*_show`, `*_list`, `*_search` etc.)\n  accept GET requests with query parameters\n- Responses are returned in a JSON envelope on success:\n  ```\n  {\n    \"help\": \"url to complete endpoint help\",\n    \"success\": true,\n    \"result\": {...}\n  }\n  ```\n  or on errors:\n  ```\n  {\n    \"help\": \"url to complete endpoint help\",\n    \"success\": false,\n    \"error\": {\n      \"__type\": \"error type\",\n      \"message\": \"error message\",\n      \"field-with-error\": [\"first-error\", \"second-error\"],\n      ...\n    }\n  }\n  ```\n", "externalDocs": {"description": "Full docs", "url": "https://docs.ckan.org/en/2.8/api/"}}], "security": [{}, {"internal_api_key": []}], "paths": {"/action/status_show": {"get": {"summary": "Get the CKAN version and a list of installed extensions", "description": "Use this API to check that you can reach the server and to check its capabilities.", "tags": ["action"], "responses": {"200": {"description": "Returns the CKAN version and a list of installed extensions"}}}}, "/action/package_list": {"get": {"summary": "Get a list of all package ids (datasets)", "description": "Note: our site uses the same value for the \"name\" and \"id\" fields of datasets\n", "tags": ["action"], "responses": {"200": {"description": "Returns a list of package ids"}}}}, "/action/package_search": {"get": {"summary": "Find packages (datasets) matching query terms", "description": "Searches for packages (datasets) matching the specified query terms", "parameters": [{"name": "q", "in": "query", "description": "A solr query string that will be used to filter and score results\n", "schema": {"type": "string"}, "examples": {"All data": {"value": ""}, "Analytics": {"value": "analytics"}, "Mammals": {"value": "mammal population"}}}, {"name": "fq", "in": "query", "description": "A solr filter query that will facet results by removing non-matching items.\nThe available parameters may be discovered by interacting with the\nfacets on https://open.canada.ca/data/dataset and observing the\nquery parameters generated.\n", "schema": {"type": "string"}, "examples": {"No filter": {"value": ""}, "Published by the federal Treasury Board Secretariat": {"value": "organization:tbs-sct"}, "Published by municipalities": {"value": "jurisdiction:municipal"}, "Transport data": {"value": "subject:transport"}, "Federal Open Maps data from Environment Canada": {"value": "collection:fgp organization:ec"}}}, {"name": "sort", "in": "query", "description": "Sort order for the search results, defaults to `score desc, metadata_modified desc`\nmeaning sort by query score order, and with no query sort by most recently modified\n", "schema": {"type": "string"}}, {"name": "rows", "in": "query", "description": "Maximum rows to return, clamped to 1000", "schema": {"type": "integer"}}, {"name": "start", "in": "query", "description": "The offset from the beginning of results (0) for pagination", "schema": {"type": "integer"}}, {"name": "include_private", "in": "query", "description": "Must be set to `true` to retrieve results on the Registry,\nno effect on the Portal\n", "schema": {"type": "boolean"}}], "responses": {"200": {"description": "List of packages (datasets) including all metadata available."}}, "tags": ["action"]}, "post": {"summary": "Find packages (datasets) matching query terms", "description": "Searches for packages (datasets) matching the specified query terms", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {"q": {"type": "string", "description": "A solr query string that will be used to filter and score results\n"}, "fq": {"type": "string", "description": "A solr filter query that will facet results by removing non-matching items.\nThe available parameters may be discovered by interacting with the\nfacets on https://open.canada.ca/data/dataset and observing the\nquery parameters generated.\n"}, "sort": {"type": "string", "description": "Sort order for the search results, defaults to `score desc, metadata_modified desc`\nmeaning sort by query score order, and with no query sort by most recently modified\n"}, "rows": {"type": "integer", "description": "Maximum rows to return, clamped to 1000", "default": 100}, "start": {"type": "integer", "description": "The offset from the beginning of results (0) for pagination"}, "include_private": {"type": "boolean", "description": "Must be set to `true` to retrieve results on the Registry,\nno effect on the Portal\n"}}}, "examples": {"100 most recently modified datasets": {"value": {"rows": 100}}, "30 datasets that best match \"water use\"": {"value": {"q": "water use", "rows": 30}}, "Datasets number 101-150 by last modified date": {"value": {"sort": "metadata_modified desc", "start": 100, "rows": 50}}}}}}, "tags": ["action"], "responses": {"200": {"description": "List of packages (datasets) including all metadata available."}}}}, "/action/package_show": {"get": {"summary": "Get metadata about one specific package (dataset)", "description": "Returns metadata about the package (dataset) corresponding to the specified unique name", "parameters": [{"name": "id", "in": "query", "description": "The package name", "schema": {"type": "string", "default": "2916fad5-ebcc-4c86-b0f3-4f619b29f412"}}], "tags": ["action"], "responses": {"200": {"description": "A package metadata object"}}}}, "/action/package_activity_list": {"get": {"summary": "Get the activity stream of a package (dataset)", "description": "Returns a package's activity stream", "parameters": [{"name": "id", "in": "query", "description": "The id or name of the package", "schema": {"type": "string", "default": "2916fad5-ebcc-4c86-b0f3-4f619b29f412"}}, {"name": "offset", "in": "query", "description": "Where to start getting activity items from", "schema": {"type": "integer", "default": 0}}, {"name": "limit", "in": "query", "description": "The maximum number of activities to return", "schema": {"type": "integer", "default": 31}}], "tags": ["action"], "responses": {"200": {"description": "List of activities"}}}}, "/action/organization_activity_list": {"get": {"summary": "Get the activity stream of an organization", "description": "Return an organization's activity stream", "parameters": [{"name": "id", "in": "query", "description": "The id or name of the organization", "schema": {"type": "string", "default": "ec"}}], "tags": ["action"], "responses": {"200": {"description": "List of an organization's activities"}}}}, "/action/organization_list_for_user": {"get": {"summary": "Get organizations that a user has a given permission for", "description": "Return the organizations that the user has a given permission for", "parameters": [{"name": "permission", "in": "query", "description": "The permission the user has against the returned organization", "schema": {"type": "string", "default": "\"edit_group\""}}], "tags": ["action"], "responses": {"200": {"description": "List of organizations for given permission"}}}}, "/action/organization_show": {"get": {"summary": "Get details of a specific organization", "description": "Return the details of an organization", "parameters": [{"name": "id", "in": "query", "description": "The id or name of the organization", "schema": {"type": "string", "default": "tbs-sct"}}, {"name": "include_datasets", "in": "query", "description": "include a list of the organization's datasets", "schema": {"type": "boolean", "default": true}}], "tags": ["action"], "responses": {"200": {"description": "List organization details"}}}}, "/action/organization_list": {"get": {"summary": "Get names of all organizations", "description": "Returns the names of all indexed organizations", "parameters": [{"name": "offset", "in": "query", "description": "The offset (index) of the first organizations to return", "schema": {"type": "integer", "default": 0}}, {"name": "limit", "in": "query", "description": "The number of organizations to be returned per page", "schema": {"type": "integer", "default": 100}}], "tags": ["action"], "responses": {"200": {"description": "List of organizations"}}}}, "/action/resource_search": {"get": {"summary": "Find resources", "description": "Returns a dictionary with two fields ``count`` and ``results``.             The ``count`` field contains the total number of Resources                found without the limit or query parameters having an effect.             The ``results`` field is a list of dictized Resource objects.             The query parameter is a required field. It is a string in                the form ``{field}:{term}`` or a list of strings, each of the             same form. Within each string, ``{field}`` is a field or extra             field on the Resource domain object.", "parameters": [{"name": "query", "in": "query", "description": "The search criteria string or list of strings of the form ``{field}:{term1}``", "schema": {"type": "string", "default": "format:csv"}}, {"name": "fields", "in": "query", "description": "Depreciated", "schema": {"type": "string"}}, {"name": "order_by", "in": "query", "description": "A field on the resource model that orders the results", "schema": {"type": "string"}}, {"name": "offset", "in": "query", "description": "Apply an offset to the query", "schema": {"type": "integer", "default": 0}}, {"name": "limit", "in": "query", "description": "Apply a limit to the query", "schema": {"type": "integer", "default": 0}}], "tags": ["action"], "responses": {"200": {"description": "Search for resources"}}}}, "/action/resource_show": {"get": {"summary": "Get metadata for a specific resource", "description": "Return the metadata of a resource", "parameters": [{"name": "id", "in": "query", "description": "The id of the resource", "schema": {"type": "string", "default": "e6c8bb1d-3726-418b-9b7e-1d97a9bbb817"}}, {"name": "include_tracking", "in": "query", "description": "Add tracking information to dataset", "schema": {"type": "boolean", "default": false}}], "tags": ["action"], "responses": {"200": {"description": "Return metadata of a resource"}}}}}, "components": {"schemas": {}, "securitySchemes": {"internal_api_key": {"type": "apiKey", "in": "header", "name": "Authorization"}}}}